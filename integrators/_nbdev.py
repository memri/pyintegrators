# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"read_file": "basic.ipynb",
         "read_json": "basic.ipynb",
         "write_json": "basic.ipynb",
         "DownloadProgressBar": "basic.ipynb",
         "download_file": "basic.ipynb",
         "Path.ls": "basic.ipynb",
         "PYI_HOME": "basic.ipynb",
         "PYI_TESTDATA": "basic.ipynb",
         "HOME_DIR": "basic.ipynb",
         "MODEL_DIR": "basic.ipynb",
         "MEMRI_S3": "basic.ipynb",
         "IMAPClient": "importers.EmailImporter.ipynb",
         "part_to_str": "importers.EmailImporter.ipynb",
         "DEFAULT_GMAIL_HOST": "importers.EmailImporter.ipynb",
         "DEFAULT_GMAIL_INBOX": "importers.EmailImporter.ipynb",
         "DEFAULT_PORT": "importers.EmailImporter.ipynb",
         "get_unique_accounts": "importers.EmailImporter.ipynb",
         "get_g_attr": "importers.EmailImporter.ipynb",
         "EmailImporter": "importers.EmailImporter.ipynb",
         "ImporterBase": "importers.Importer.ipynb",
         "batch": "importers.util.ipynb",
         "MeanAggregator": "indexers.FaceClusteringIndexer.Models.ipynb",
         "GraphConv": "indexers.FaceClusteringIndexer.Models.ipynb",
         "GCN_V": "indexers.FaceClusteringIndexer.Models.ipynb",
         "l2norm": "indexers.FaceClusteringIndexer.Models.ipynb",
         "GCNVDataset": "indexers.FaceClusteringIndexer.Models.ipynb",
         "sparse_mx_to_indices_values": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "sparse_mx_to_torch_sparse_tensor": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "indices_values_to_sparse_tensor": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "build_symmetric_adj": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "row_normalize": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "peaks_to_edges": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "confidence_to_peaks": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "peaks_to_labels": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "build_knns": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "edge_to_connected_graph": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "knns2ordered_nbrs": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "read_meta": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "read_probs": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "fast_knns2spmat": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "knn_faiss": "indexers.FaceClusteringIndexer.Utils.ipynb",
         "FaceClusteringIndexer": "indexers.FaceClusteringIndexer.indexer.ipynb",
         "FaceRecognitionIndexer": "indexers.FaceRecognitionIndexer.ipynb",
         "show_images": "indexers.FacerecognitionIndexer.Photo.ipynb",
         "get_size": "indexers.FacerecognitionIndexer.Photo.ipynb",
         "resize": "indexers.FacerecognitionIndexer.Photo.ipynb",
         "get_height_width_channels": "indexers.FacerecognitionIndexer.Photo.ipynb",
         "IPhoto": "indexers.FacerecognitionIndexer.Photo.ipynb",
         "GeoIndexer": "indexers.GeoIndexer.ipynb",
         "LOCATION_EDGE": "indexers.GeoIndexer.ipynb",
         "LIST_CLASSES": "indexers.NoteListIndexer.NoteList.ipynb",
         "INote": "indexers.NoteListIndexer.NoteList.ipynb",
         "INoteList": "indexers.NoteListIndexer.NoteList.ipynb",
         "ULNoteList": "indexers.NoteListIndexer.NoteList.ipynb",
         "ISpan": "indexers.NoteListIndexer.NoteList.ipynb",
         "get_span": "indexers.NoteListIndexer.NoteList.ipynb",
         "HTMLListParser": "indexers.NoteListIndexer.Parser.ipynb",
         "NotesListIndexer": "indexers.NoteListIndexer.ipynb",
         "ListTypePredictor": "indexers.NoteListIndexer.ipynb",
         "get_toplevel_elements": "indexers.NoteListIndexer.util.ipynb",
         "remove_html": "indexers.NoteListIndexer.util.ipynb",
         "remove_prefix_chars": "indexers.NoteListIndexer.util.ipynb",
         "is_newline": "indexers.NoteListIndexer.util.ipynb",
         "is_newline_div": "indexers.NoteListIndexer.util.ipynb",
         "div_is_unstructured_list_title": "indexers.NoteListIndexer.util.ipynb",
         "find_till_double_br": "indexers.NoteListIndexer.util.ipynb",
         "get_children": "indexers.NoteListIndexer.util.ipynb",
         "contains": "indexers.NoteListIndexer.util.ipynb",
         "HTML_LINEBREAK_REGEX": "indexers.NoteListIndexer.util.ipynb",
         "IndexerBase": "indexers.indexer.ipynb",
         "IndexerData": "indexers.indexer.ipynb",
         "get_indexer_run_data": "indexers.indexer.ipynb",
         "test_registration": "indexers.indexer.ipynb",
         "POD_FULL_ADDRESS_ENV": "indexers.indexer.ipynb",
         "RUN_UID_ENV": "indexers.indexer.ipynb",
         "POD_SERVICE_PAYLOAD_ENV": "indexers.indexer.ipynb",
         "DATABASE_KEY_ENV": "indexers.indexer.ipynb",
         "OWNER_KEY_ENV": "indexers.indexer.ipynb",
         "run_importer": "indexers.indexer.ipynb",
         "run_integrator_from_run_uid": "indexers.indexer.ipynb",
         "run_integrator": "indexers.indexer.ipynb",
         "generate_test_env": "indexers.indexer.ipynb",
         "ALL_EDGES": "itembase.ipynb",
         "DB": "itembase.ipynb",
         "parse_base_item_json": "itembase.ipynb",
         "Edge": "itembase.ipynb",
         "ItemBase": "itembase.ipynb",
         "DEFAULT_POD_ADDRESS": "pod.client.ipynb",
         "POD_VERSION": "pod.client.ipynb",
         "PodClient": "pod.client.ipynb"}

modules = ["data/basic.py",
           "importers/email.py",
           "importers/importer.py",
           "importers/util.py",
           "indexers/faceclustering/models.py",
           "indexers/faceclustering/utils.py",
           "indexers/faceclustering/indexer.py",
           "indexers/facerecognition/facerecognition_indexer.py",
           "indexers/facerecognition/photo.py",
           "indexers/geo/geo_indexer.py",
           "indexers/notelist/notelist.py",
           "indexers/notelist/parser.py",
           "indexers/notelist/notelist_indexer.py",
           "indexers/notelist/util.py",
           "indexers/indexer.py",
           "data/itembase.py",
           "pod/client.py"]

doc_url = "//integrators/"

git_url = "https://gitlab.memri.io/memri/integrators/tree/master/"

def custom_doc_links(name): return None
